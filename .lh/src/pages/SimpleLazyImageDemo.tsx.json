{
    "sourceFile": "src/pages/SimpleLazyImageDemo.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1759224153462,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1759224167908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n   const [priority, setPriority] = useState<\"low\" | \"medium\" | \"high\">(\"medium\");\r\n \r\n   // 预设的示例图片\r\n   const sampleImages = [\r\n-    { url: \"https://picsum.photos/800/600?random=1\", alt: \"风景图片 1\" },\r\n+    { url: \"https://img14.360buyimg.com/n1/s720x720_jfs/t1/319106/18/16461/163684/6874b428F8e164ffc/6b1bc48881fba81b.jpg\", alt: \"风景图片 1\" },\r\n     { url: \"https://picsum.photos/800/600?random=2\", alt: \"风景图片 2\" },\r\n     { url: \"https://picsum.photos/800/600?random=3\", alt: \"风景图片 3\" },\r\n     { url: \"https://picsum.photos/800/600?random=4\", alt: \"风景图片 4\" },\r\n     { url: \"https://picsum.photos/800/600?random=5\", alt: \"风景图片 5\" },\r\n"
                },
                {
                    "date": 1759224196349,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,10 +20,16 @@\n   const [priority, setPriority] = useState<\"low\" | \"medium\" | \"high\">(\"medium\");\r\n \r\n   // 预设的示例图片\r\n   const sampleImages = [\r\n-    { url: \"https://img14.360buyimg.com/n1/s720x720_jfs/t1/319106/18/16461/163684/6874b428F8e164ffc/6b1bc48881fba81b.jpg\", alt: \"风景图片 1\" },\r\n-    { url: \"https://picsum.photos/800/600?random=2\", alt: \"风景图片 2\" },\r\n+    {\r\n+      url: \"https://img14.360buyimg.com/n1/s720x720_jfs/t1/319106/18/16461/163684/6874b428F8e164ffc/6b1bc48881fba81b.jpg\",\r\n+      alt: \"风景图片 1\",\r\n+    },\r\n+    {\r\n+      url: \"https://img14.360buyimg.com/n0/jfs/t1/301062/10/19719/120207/68666f27F9a63c918/f8085cbae5f42ea6.jpg\",\r\n+      alt: \"风景图片 2\",\r\n+    },\r\n     { url: \"https://picsum.photos/800/600?random=3\", alt: \"风景图片 3\" },\r\n     { url: \"https://picsum.photos/800/600?random=4\", alt: \"风景图片 4\" },\r\n     { url: \"https://picsum.photos/800/600?random=5\", alt: \"风景图片 5\" },\r\n   ];\r\n"
                },
                {
                    "date": 1759224235461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,12 @@\n     {\r\n       url: \"https://img14.360buyimg.com/n0/jfs/t1/301062/10/19719/120207/68666f27F9a63c918/f8085cbae5f42ea6.jpg\",\r\n       alt: \"风景图片 2\",\r\n     },\r\n-    { url: \"https://picsum.photos/800/600?random=3\", alt: \"风景图片 3\" },\r\n+    {\r\n+      url: \"https://img13.360buyimg.com/n5/s720x720_jfs/t1/231863/24/135/108665/652f9801F06ba1808/aaaa27caf671a2a7.jpg.avif\",\r\n+      alt: \"风景图片 3\",\r\n+    },\r\n     { url: \"https://picsum.photos/800/600?random=4\", alt: \"风景图片 4\" },\r\n     { url: \"https://picsum.photos/800/600?random=5\", alt: \"风景图片 5\" },\r\n   ];\r\n \r\n"
                },
                {
                    "date": 1759224266314,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,12 @@\n     {\r\n       url: \"https://img13.360buyimg.com/n5/s720x720_jfs/t1/231863/24/135/108665/652f9801F06ba1808/aaaa27caf671a2a7.jpg.avif\",\r\n       alt: \"风景图片 3\",\r\n     },\r\n-    { url: \"https://picsum.photos/800/600?random=4\", alt: \"风景图片 4\" },\r\n+    {\r\n+      url: \"https://img10.360buyimg.com/n1/s720x720_jfs/t1/2750/34/24441/345958/66e4887bF516ccaa9/5072a08085c99e28.jpg.avif\",\r\n+      alt: \"风景图片 4\",\r\n+    },\r\n     { url: \"https://picsum.photos/800/600?random=5\", alt: \"风景图片 5\" },\r\n   ];\r\n \r\n   const handleImageChange = (image: (typeof sampleImages)[0]) => {\r\n"
                },
                {
                    "date": 1759224284610,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n     {\r\n       url: \"https://img10.360buyimg.com/n1/s720x720_jfs/t1/2750/34/24441/345958/66e4887bF516ccaa9/5072a08085c99e28.jpg.avif\",\r\n       alt: \"风景图片 4\",\r\n     },\r\n-    { url: \"https://picsum.photos/800/600?random=5\", alt: \"风景图片 5\" },\r\n+    { url: \"https://img11.360buyimg.com/n1/s720x720_jfs/t1/238481/25/29660/115705/68d11cceFde1e1a4e/b1aedebc89e2f906.jpg.avif\", alt: \"风景图片 5\" },\r\n   ];\r\n \r\n   const handleImageChange = (image: (typeof sampleImages)[0]) => {\r\n     setImageUrl(image.url);\r\n"
                },
                {
                    "date": 1759224326458,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,28 +20,13 @@\n   const [priority, setPriority] = useState<\"low\" | \"medium\" | \"high\">(\"medium\");\r\n \r\n   // 预设的示例图片\r\n   const sampleImages = [\r\n-    {\r\n-      url: \"https://img14.360buyimg.com/n1/s720x720_jfs/t1/319106/18/16461/163684/6874b428F8e164ffc/6b1bc48881fba81b.jpg\",\r\n-      alt: \"风景图片 1\",\r\n-    },\r\n-    {\r\n-      url: \"https://img14.360buyimg.com/n0/jfs/t1/301062/10/19719/120207/68666f27F9a63c918/f8085cbae5f42ea6.jpg\",\r\n-      alt: \"风景图片 2\",\r\n-    },\r\n-    {\r\n-      url: \"https://img13.360buyimg.com/n5/s720x720_jfs/t1/231863/24/135/108665/652f9801F06ba1808/aaaa27caf671a2a7.jpg.avif\",\r\n-      alt: \"风景图片 3\",\r\n-    },\r\n-    {\r\n-      url: \"https://img10.360buyimg.com/n1/s720x720_jfs/t1/2750/34/24441/345958/66e4887bF516ccaa9/5072a08085c99e28.jpg.avif\",\r\n-      alt: \"风景图片 4\",\r\n-    },\r\n-    {\r\n-      url: \"https://img11.360buyimg.com/n1/s720x720_jfs/t1/238481/25/29660/115705/68d11cceFde1e1a4e/b1aedebc89e2f906.jpg.avif\",\r\n-      alt: \"风景图片 5\",\r\n-    },\r\n+    { url: \"https://picsum.photos/800/600?random=1\", alt: \"风景图片 1\" },\r\n+    { url: \"https://picsum.photos/800/600?random=2\", alt: \"风景图片 2\" },\r\n+    { url: \"https://picsum.photos/800/600?random=3\", alt: \"风景图片 3\" },\r\n+    { url: \"https://picsum.photos/800/600?random=4\", alt: \"风景图片 4\" },\r\n+    { url: \"https://picsum.photos/800/600?random=5\", alt: \"风景图片 5\" },\r\n   ];\r\n \r\n   const handleImageChange = (image: (typeof sampleImages)[0]) => {\r\n     setImageUrl(image.url);\r\n"
                },
                {
                    "date": 1759224673109,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n                   onClick={() => handleImageChange(image)}\r\n                   style={{\r\n                     padding: \"8px 12px\",\r\n                     backgroundColor:\r\n-                      imageUrl === image.url ? \"#007bff\" : \"#e9ecef\",\r\n+                      imageUrl === image.url ? \"#007bff\" : \"#62798f\",\r\n                     color: imageUrl === image.url ? \"white\" : \"#333\",\r\n                     border: \"none\",\r\n                     borderRadius: \"4px\",\r\n                     cursor: \"pointer\",\r\n"
                }
            ],
            "date": 1759224153462,
            "name": "Commit-0",
            "content": "/**\r\n * 简单单张图片懒加载演示\r\n * 展示 LazyImage 组件的基本用法\r\n */\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nimport { LazyImage } from \"../components/LazyImage\";\r\n\r\nconst SimpleLazyImageDemo: React.FC = () => {\r\n  const [imageUrl, setImageUrl] = useState(\r\n    \"https://picsum.photos/800/600?random=1\"\r\n  );\r\n  const [altText, setAltText] = useState(\"示例图片\");\r\n  const [enableLQIP, setEnableLQIP] = useState(true);\r\n  const [enableWorker, setEnableWorker] = useState(true);\r\n  const [showIndicator, setShowIndicator] = useState(true);\r\n  const [lqipWidth, setLqipWidth] = useState(20);\r\n  const [lqipQuality, setLqipQuality] = useState(0.6);\r\n  const [priority, setPriority] = useState<\"low\" | \"medium\" | \"high\">(\"medium\");\r\n\r\n  // 预设的示例图片\r\n  const sampleImages = [\r\n    { url: \"https://picsum.photos/800/600?random=1\", alt: \"风景图片 1\" },\r\n    { url: \"https://picsum.photos/800/600?random=2\", alt: \"风景图片 2\" },\r\n    { url: \"https://picsum.photos/800/600?random=3\", alt: \"风景图片 3\" },\r\n    { url: \"https://picsum.photos/800/600?random=4\", alt: \"风景图片 4\" },\r\n    { url: \"https://picsum.photos/800/600?random=5\", alt: \"风景图片 5\" },\r\n  ];\r\n\r\n  const handleImageChange = (image: (typeof sampleImages)[0]) => {\r\n    setImageUrl(image.url);\r\n    setAltText(image.alt);\r\n  };\r\n\r\n  const handleCustomUrl = () => {\r\n    const url = prompt(\"请输入图片 URL:\");\r\n    if (url) {\r\n      setImageUrl(url);\r\n      setAltText(\"自定义图片\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\", maxWidth: \"1200px\", margin: \"0 auto\" }}>\r\n      <h1>🖼️ 简单单张图片懒加载演示</h1>\r\n\r\n      <div style={{ marginBottom: \"30px\" }}>\r\n        <h2>基本用法</h2>\r\n        <p>这是一个最简单的 LazyImage 使用示例，展示单张图片的懒加载效果。</p>\r\n      </div>\r\n\r\n      {/* 控制面板 */}\r\n      <div style={{ marginBottom: \"30px\" }}>\r\n        <h2>配置控制</h2>\r\n        <div\r\n          style={{\r\n            backgroundColor: \"#f8f9fa\",\r\n            padding: \"20px\",\r\n            borderRadius: \"8px\",\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"repeat(auto-fit, minmax(250px, 1fr))\",\r\n            gap: \"20px\",\r\n          }}\r\n        >\r\n          {/* 图片选择 */}\r\n          <div>\r\n            <h4>选择示例图片</h4>\r\n            <div\r\n              style={{ display: \"flex\", flexDirection: \"column\", gap: \"8px\" }}\r\n            >\r\n              {sampleImages.map((image, index) => (\r\n                <button\r\n                  key={index}\r\n                  onClick={() => handleImageChange(image)}\r\n                  style={{\r\n                    padding: \"8px 12px\",\r\n                    backgroundColor:\r\n                      imageUrl === image.url ? \"#007bff\" : \"#e9ecef\",\r\n                    color: imageUrl === image.url ? \"white\" : \"#333\",\r\n                    border: \"none\",\r\n                    borderRadius: \"4px\",\r\n                    cursor: \"pointer\",\r\n                    fontSize: \"12px\",\r\n                    textAlign: \"left\",\r\n                  }}\r\n                >\r\n                  {image.alt}\r\n                </button>\r\n              ))}\r\n              <button\r\n                onClick={handleCustomUrl}\r\n                style={{\r\n                  padding: \"8px 12px\",\r\n                  backgroundColor: \"#28a745\",\r\n                  color: \"white\",\r\n                  border: \"none\",\r\n                  borderRadius: \"4px\",\r\n                  cursor: \"pointer\",\r\n                  fontSize: \"12px\",\r\n                }}\r\n              >\r\n                + 自定义 URL\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* LQIP 设置 */}\r\n          <div>\r\n            <h4>LQIP 设置</h4>\r\n            <div\r\n              style={{ display: \"flex\", flexDirection: \"column\", gap: \"10px\" }}\r\n            >\r\n              <label\r\n                style={{ display: \"flex\", alignItems: \"center\", gap: \"8px\" }}\r\n              >\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={enableLQIP}\r\n                  onChange={(e) => setEnableLQIP(e.target.checked)}\r\n                />\r\n                启用 LQIP\r\n              </label>\r\n\r\n              <label\r\n                style={{ display: \"flex\", alignItems: \"center\", gap: \"8px\" }}\r\n              >\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={enableWorker}\r\n                  onChange={(e) => setEnableWorker(e.target.checked)}\r\n                  disabled={!enableLQIP}\r\n                />\r\n                启用 Web Worker\r\n              </label>\r\n\r\n              <div>\r\n                <label>LQIP 尺寸: {lqipWidth}px</label>\r\n                <input\r\n                  type=\"range\"\r\n                  min=\"10\"\r\n                  max=\"50\"\r\n                  value={lqipWidth}\r\n                  onChange={(e) => setLqipWidth(Number(e.target.value))}\r\n                  disabled={!enableLQIP}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label>LQIP 质量: {lqipQuality}</label>\r\n                <input\r\n                  type=\"range\"\r\n                  min=\"0.1\"\r\n                  max=\"1\"\r\n                  step=\"0.1\"\r\n                  value={lqipQuality}\r\n                  onChange={(e) => setLqipQuality(Number(e.target.value))}\r\n                  disabled={!enableLQIP}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 其他设置 */}\r\n          <div>\r\n            <h4>其他设置</h4>\r\n            <div\r\n              style={{ display: \"flex\", flexDirection: \"column\", gap: \"10px\" }}\r\n            >\r\n              <label\r\n                style={{ display: \"flex\", alignItems: \"center\", gap: \"8px\" }}\r\n              >\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={showIndicator}\r\n                  onChange={(e) => setShowIndicator(e.target.checked)}\r\n                />\r\n                显示加载指示器\r\n              </label>\r\n\r\n              <div>\r\n                <label>加载优先级</label>\r\n                <select\r\n                  value={priority}\r\n                  onChange={(e) =>\r\n                    setPriority(e.target.value as \"low\" | \"medium\" | \"high\")\r\n                  }\r\n                  style={{ width: \"100%\", padding: \"4px\" }}\r\n                >\r\n                  <option value=\"low\">低优先级</option>\r\n                  <option value=\"medium\">中等优先级</option>\r\n                  <option value=\"high\">高优先级</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 图片展示区域 */}\r\n      <div style={{ marginBottom: \"30px\" }}>\r\n        <h2>图片展示</h2>\r\n        <div\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            padding: \"20px\",\r\n            borderRadius: \"8px\",\r\n            boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\",\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          <h3 style={{ margin: \"0 0 20px 0\", color: \"#333\" }}>{altText}</h3>\r\n\r\n          <div\r\n            style={{\r\n              position: \"relative\",\r\n              display: \"inline-block\",\r\n              maxWidth: \"100%\",\r\n              borderRadius: \"8px\",\r\n              overflow: \"hidden\",\r\n              boxShadow: \"0 4px 12px rgba(0,0,0,0.15)\",\r\n            }}\r\n          >\r\n            <LazyImage\r\n              src={imageUrl}\r\n              alt={altText}\r\n              style={{\r\n                width: \"600px\",\r\n                height: \"400px\",\r\n                objectFit: \"cover\",\r\n                display: \"block\",\r\n              }}\r\n              enableLQIP={enableLQIP}\r\n              lqipWidth={lqipWidth}\r\n              lqipQuality={lqipQuality}\r\n              enableLQIPWorker={enableWorker}\r\n              showLoadingIndicator={showIndicator}\r\n              priority={priority}\r\n              onLoad={() => {\r\n                console.log(\"✅ 图片加载成功:\", altText);\r\n              }}\r\n              onError={() => {\r\n                console.error(\"❌ 图片加载失败\");\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              marginTop: \"15px\",\r\n              fontSize: \"14px\",\r\n              color: \"#666\",\r\n              textAlign: \"left\",\r\n              backgroundColor: \"#f8f9fa\",\r\n              padding: \"10px\",\r\n              borderRadius: \"4px\",\r\n            }}\r\n          >\r\n            <p>\r\n              <strong>当前配置:</strong>\r\n            </p>\r\n            <ul style={{ margin: \"5px 0\", paddingLeft: \"20px\" }}>\r\n              <li>LQIP: {enableLQIP ? \"启用\" : \"禁用\"}</li>\r\n              {enableLQIP && (\r\n                <>\r\n                  <li>Worker: {enableWorker ? \"启用\" : \"禁用\"}</li>\r\n                  <li>LQIP 尺寸: {lqipWidth}px</li>\r\n                  <li>LQIP 质量: {lqipQuality}</li>\r\n                </>\r\n              )}\r\n              <li>加载指示器: {showIndicator ? \"显示\" : \"隐藏\"}</li>\r\n              <li>优先级: {priority}</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 代码示例 */}\r\n      <div style={{ marginBottom: \"30px\" }}>\r\n        <h2>代码示例</h2>\r\n        <div\r\n          style={{\r\n            backgroundColor: \"#f8f9fa\",\r\n            padding: \"20px\",\r\n            borderRadius: \"8px\",\r\n          }}\r\n        >\r\n          <h4>当前配置对应的代码:</h4>\r\n          <pre\r\n            style={{\r\n              fontSize: \"14px\",\r\n              overflow: \"auto\",\r\n              backgroundColor: \"#fff\",\r\n              padding: \"15px\",\r\n              borderRadius: \"4px\",\r\n              border: \"1px solid #dee2e6\",\r\n            }}\r\n          >\r\n            {`import { LazyImage } from 'vane-lazy-image';\r\n\r\n<LazyImage\r\n  src=\"${imageUrl}\"\r\n  alt=\"${altText}\"\r\n  style={{\r\n    width: \"600px\",\r\n    height: \"400px\",\r\n    objectFit: \"cover\"\r\n  }}\r\n  enableLQIP={${enableLQIP}}\r\n  ${enableLQIP ? `lqipWidth={${lqipWidth}}` : \"\"}\r\n  ${enableLQIP ? `lqipQuality={${lqipQuality}}` : \"\"}\r\n  ${enableLQIP ? `enableLQIPWorker={${enableWorker}}` : \"\"}\r\n  showLoadingIndicator={${showIndicator}}\r\n  priority=\"${priority}\"\r\n  onLoad={() => console.log(\"图片加载成功\")}\r\n  onError={(error) => console.error(\"图片加载失败\", error)}\r\n/>`}\r\n          </pre>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 功能说明 */}\r\n      <div style={{ marginBottom: \"30px\" }}>\r\n        <h2>功能说明</h2>\r\n        <div\r\n          style={{\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"repeat(auto-fit, minmax(300px, 1fr))\",\r\n            gap: \"20px\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              backgroundColor: \"#d4edda\",\r\n              padding: \"15px\",\r\n              borderRadius: \"8px\",\r\n            }}\r\n          >\r\n            <h4>🎯 懒加载</h4>\r\n            <p>图片只有在进入视窗时才开始加载，提升页面性能。</p>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              backgroundColor: \"#d1ecf1\",\r\n              padding: \"15px\",\r\n              borderRadius: \"8px\",\r\n            }}\r\n          >\r\n            <h4>🖼️ LQIP (低质量图片占位)</h4>\r\n            <p>在图片加载前显示低质量预览图，提升用户体验。</p>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              backgroundColor: \"#fff3cd\",\r\n              padding: \"15px\",\r\n              borderRadius: \"8px\",\r\n            }}\r\n          >\r\n            <h4>⚡ Web Worker</h4>\r\n            <p>在后台线程处理 LQIP 生成，不阻塞主线程。</p>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              backgroundColor: \"#f8d7da\",\r\n              padding: \"15px\",\r\n              borderRadius: \"8px\",\r\n            }}\r\n          >\r\n            <h4>📊 加载指示器</h4>\r\n            <p>显示加载进度，让用户了解图片加载状态。</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 使用建议 */}\r\n      <div style={{ marginBottom: \"30px\" }}>\r\n        <h2>使用建议</h2>\r\n        <div\r\n          style={{\r\n            backgroundColor: \"#e2e3e5\",\r\n            padding: \"20px\",\r\n            borderRadius: \"8px\",\r\n          }}\r\n        >\r\n          <h4>最佳实践:</h4>\r\n          <ul>\r\n            <li>\r\n              🎯 <strong>首屏图片</strong> - 使用 <code>priority=\"high\"</code>{\" \"}\r\n              优先加载\r\n            </li>\r\n            <li>\r\n              🎯 <strong>LQIP 尺寸</strong> - 建议 16-32px，平衡质量和性能\r\n            </li>\r\n            <li>\r\n              🎯 <strong>LQIP 质量</strong> - 建议 0.5-0.7，获得最佳压缩比\r\n            </li>\r\n            <li>\r\n              🎯 <strong>Web Worker</strong> - 现代浏览器建议启用，提升性能\r\n            </li>\r\n            <li>\r\n              🎯 <strong>加载指示器</strong> - 网络较慢时建议显示\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimpleLazyImageDemo;\r\n"
        }
    ]
}