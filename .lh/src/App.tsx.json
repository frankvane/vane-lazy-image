{
    "sourceFile": "src/App.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 17,
            "patches": [
                {
                    "date": 1759220444650,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1759223181156,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,10 @@\n   () => import(\"./pages/BothAxisScrollDemo\")\r\n );\r\n const MemoryTestDemo = lazy(() => import(\"./pages/MemoryTestDemo\"));\r\n const WorkerTestDemo = lazy(() => import(\"./pages/WorkerTestDemo\"));\r\n+const OptimizedWorkerTestDemo = lazy(() => import(\"./pages/OptimizedWorkerTestDemo\"));\r\n+const DiagnosticDemo = lazy(() => import(\"./pages/DiagnosticDemo\"));\r\n \r\n const NavBar: React.FC = () => {\r\n   const baseLinkStyle: React.CSSProperties = {\r\n     padding: \"8px 12px\",\r\n@@ -67,8 +69,10 @@\n       <LinkItem to=\"/lazy-image-horizontal\" label=\"LazyImage: 水平滚动\" />\r\n       <LinkItem to=\"/lazy-image-both\" label=\"LazyImage: 双轴滚动\" />\r\n       <LinkItem to=\"/memory-test\" label=\"内存管理测试\" />\r\n       <LinkItem to=\"/worker-test\" label=\"Worker 测试\" />\r\n+      <LinkItem to=\"/optimized-worker-test\" label=\"优化 Worker 测试\" />\r\n+      <LinkItem to=\"/diagnostic\" label=\"性能诊断\" />\r\n     </div>\r\n   );\r\n };\r\n \r\n@@ -103,12 +107,11 @@\n                 element={<BothAxisScrollLazyImageDemo />}\r\n               />\r\n               <Route path=\"/memory-test\" element={<MemoryTestDemo />} />\r\n               <Route path=\"/worker-test\" element={<WorkerTestDemo />} />\r\n-              <Route\r\n-                path=\"*\"\r\n-                element={<Navigate to=\"/lazy-image\" replace />}\r\n-              />\r\n+              <Route path=\"/optimized-worker-test\" element={<OptimizedWorkerTestDemo />} />\r\n+              <Route path=\"/diagnostic\" element={<DiagnosticDemo />} />\r\n+              <Route path=\"*\" element={<Navigate to=\"/lazy-image\" replace />} />\r\n             </Routes>\r\n           </Suspense>\r\n         </div>\r\n       </div>\r\n"
                },
                {
                    "date": 1759223811109,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,10 +18,13 @@\n   () => import(\"./pages/BothAxisScrollDemo\")\r\n );\r\n const MemoryTestDemo = lazy(() => import(\"./pages/MemoryTestDemo\"));\r\n const WorkerTestDemo = lazy(() => import(\"./pages/WorkerTestDemo\"));\r\n-const OptimizedWorkerTestDemo = lazy(() => import(\"./pages/OptimizedWorkerTestDemo\"));\r\n+const OptimizedWorkerTestDemo = lazy(\r\n+  () => import(\"./pages/OptimizedWorkerTestDemo\")\r\n+);\r\n const DiagnosticDemo = lazy(() => import(\"./pages/DiagnosticDemo\"));\r\n+const WorkerFixTest = lazy(() => import(\"./pages/WorkerFixTest\"));\r\n \r\n const NavBar: React.FC = () => {\r\n   const baseLinkStyle: React.CSSProperties = {\r\n     padding: \"8px 12px\",\r\n@@ -71,8 +74,9 @@\n       <LinkItem to=\"/memory-test\" label=\"内存管理测试\" />\r\n       <LinkItem to=\"/worker-test\" label=\"Worker 测试\" />\r\n       <LinkItem to=\"/optimized-worker-test\" label=\"优化 Worker 测试\" />\r\n       <LinkItem to=\"/diagnostic\" label=\"性能诊断\" />\r\n+      <LinkItem to=\"/worker-fix-test\" label=\"Worker 修复测试\" />\r\n     </div>\r\n   );\r\n };\r\n \r\n@@ -107,10 +111,14 @@\n                 element={<BothAxisScrollLazyImageDemo />}\r\n               />\r\n               <Route path=\"/memory-test\" element={<MemoryTestDemo />} />\r\n               <Route path=\"/worker-test\" element={<WorkerTestDemo />} />\r\n-              <Route path=\"/optimized-worker-test\" element={<OptimizedWorkerTestDemo />} />\r\n+              <Route\r\n+                path=\"/optimized-worker-test\"\r\n+                element={<OptimizedWorkerTestDemo />}\r\n+              />\r\n               <Route path=\"/diagnostic\" element={<DiagnosticDemo />} />\r\n+              <Route path=\"/worker-fix-test\" element={<WorkerFixTest />} />\r\n               <Route path=\"*\" element={<Navigate to=\"/lazy-image\" replace />} />\r\n             </Routes>\r\n           </Suspense>\r\n         </div>\r\n"
                },
                {
                    "date": 1759224153537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,8 +23,10 @@\n   () => import(\"./pages/OptimizedWorkerTestDemo\")\r\n );\r\n const DiagnosticDemo = lazy(() => import(\"./pages/DiagnosticDemo\"));\r\n const WorkerFixTest = lazy(() => import(\"./pages/WorkerFixTest\"));\r\n+const SimpleLazyImageDemo = lazy(() => import(\"./pages/SimpleLazyImageDemo\"));\r\n+const QuickDemo = lazy(() => import(\"./pages/QuickDemo\"));\r\n \r\n const NavBar: React.FC = () => {\r\n   const baseLinkStyle: React.CSSProperties = {\r\n     padding: \"8px 12px\",\r\n@@ -67,8 +69,10 @@\n       }}\r\n     >\r\n       <h1 style={{ margin: 0, marginRight: 12, fontSize: 20 }}>组件演示路由</h1>\r\n       <LinkItem to=\"/lazy-image\" label=\"LazyImage\" />\r\n+      <LinkItem to=\"/simple-lazy-image\" label=\"简单单张图片\" />\r\n+      <LinkItem to=\"/quick-demo\" label=\"快速演示\" />\r\n       <LinkItem to=\"/lazy-image-virtual\" label=\"LazyImage: 虚拟滚动\" />\r\n       <LinkItem to=\"/lazy-image-horizontal\" label=\"LazyImage: 水平滚动\" />\r\n       <LinkItem to=\"/lazy-image-both\" label=\"LazyImage: 双轴滚动\" />\r\n       <LinkItem to=\"/memory-test\" label=\"内存管理测试\" />\r\n@@ -97,8 +101,10 @@\n             fallback={<div style={{ padding: 20 }}>正在加载页面...</div>}\r\n           >\r\n             <Routes>\r\n               <Route path=\"/lazy-image\" element={<LazyImageDemo />} />\r\n+              <Route path=\"/simple-lazy-image\" element={<SimpleLazyImageDemo />} />\r\n+              <Route path=\"/quick-demo\" element={<QuickDemo />} />\r\n               <Route\r\n                 path=\"/lazy-image-virtual\"\r\n                 element={<VirtualScrollLazyImageDemo />}\r\n               />\r\n"
                },
                {
                    "date": 1759224624451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,9 @@\n const DiagnosticDemo = lazy(() => import(\"./pages/DiagnosticDemo\"));\r\n const WorkerFixTest = lazy(() => import(\"./pages/WorkerFixTest\"));\r\n const SimpleLazyImageDemo = lazy(() => import(\"./pages/SimpleLazyImageDemo\"));\r\n const QuickDemo = lazy(() => import(\"./pages/QuickDemo\"));\r\n+const LoadingStateDemo = lazy(() => import(\"./pages/LoadingStateDemo\"));\r\n \r\n const NavBar: React.FC = () => {\r\n   const baseLinkStyle: React.CSSProperties = {\r\n     padding: \"8px 12px\",\r\n@@ -71,8 +72,9 @@\n       <h1 style={{ margin: 0, marginRight: 12, fontSize: 20 }}>组件演示路由</h1>\r\n       <LinkItem to=\"/lazy-image\" label=\"LazyImage\" />\r\n       <LinkItem to=\"/simple-lazy-image\" label=\"简单单张图片\" />\r\n       <LinkItem to=\"/quick-demo\" label=\"快速演示\" />\r\n+      <LinkItem to=\"/loading-state-demo\" label=\"加载状态演示\" />\r\n       <LinkItem to=\"/lazy-image-virtual\" label=\"LazyImage: 虚拟滚动\" />\r\n       <LinkItem to=\"/lazy-image-horizontal\" label=\"LazyImage: 水平滚动\" />\r\n       <LinkItem to=\"/lazy-image-both\" label=\"LazyImage: 双轴滚动\" />\r\n       <LinkItem to=\"/memory-test\" label=\"内存管理测试\" />\r\n@@ -101,11 +103,18 @@\n             fallback={<div style={{ padding: 20 }}>正在加载页面...</div>}\r\n           >\r\n             <Routes>\r\n               <Route path=\"/lazy-image\" element={<LazyImageDemo />} />\r\n-              <Route path=\"/simple-lazy-image\" element={<SimpleLazyImageDemo />} />\r\n+              <Route\r\n+                path=\"/simple-lazy-image\"\r\n+                element={<SimpleLazyImageDemo />}\r\n+              />\r\n               <Route path=\"/quick-demo\" element={<QuickDemo />} />\r\n               <Route\r\n+                path=\"/loading-state-demo\"\r\n+                element={<LoadingStateDemo />}\r\n+              />\r\n+              <Route\r\n                 path=\"/lazy-image-virtual\"\r\n                 element={<VirtualScrollLazyImageDemo />}\r\n               />\r\n               <Route\r\n"
                },
                {
                    "date": 1759244143435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,28 +6,32 @@\n   Routes,\r\n } from \"react-router-dom\";\r\n import React, { Suspense, lazy } from \"react\";\r\n \r\n-const LazyImageDemo = lazy(() => import(\"./pages/LazyImageDemo\"));\r\n+const LazyImageDemo = lazy(() => import(\"./pages/LazyImage/LazyImageDemo\"));\r\n const VirtualScrollLazyImageDemo = lazy(\r\n-  () => import(\"./pages/VirtualScrollDemo\")\r\n+  () => import(\"./pages/LazyImage/VirtualScrollDemo\")\r\n );\r\n const HorizontalScrollLazyImageDemo = lazy(\r\n-  () => import(\"./pages/HorizontalScrollDemo\")\r\n+  () => import(\"./pages/LazyImage/HorizontalScrollDemo\")\r\n );\r\n const BothAxisScrollLazyImageDemo = lazy(\r\n-  () => import(\"./pages/BothAxisScrollDemo\")\r\n+  () => import(\"./pages/LazyImage/BothAxisScrollDemo\")\r\n );\r\n-const MemoryTestDemo = lazy(() => import(\"./pages/MemoryTestDemo\"));\r\n-const WorkerTestDemo = lazy(() => import(\"./pages/WorkerTestDemo\"));\r\n+const MemoryTestDemo = lazy(() => import(\"./pages/LazyImage/MemoryTestDemo\"));\r\n+const WorkerTestDemo = lazy(() => import(\"./pages/LazyImage/WorkerTestDemo\"));\r\n const OptimizedWorkerTestDemo = lazy(\r\n-  () => import(\"./pages/OptimizedWorkerTestDemo\")\r\n+  () => import(\"./pages/LazyImage/OptimizedWorkerTestDemo\")\r\n );\r\n-const DiagnosticDemo = lazy(() => import(\"./pages/DiagnosticDemo\"));\r\n-const WorkerFixTest = lazy(() => import(\"./pages/WorkerFixTest\"));\r\n-const SimpleLazyImageDemo = lazy(() => import(\"./pages/SimpleLazyImageDemo\"));\r\n-const QuickDemo = lazy(() => import(\"./pages/QuickDemo\"));\r\n-const LoadingStateDemo = lazy(() => import(\"./pages/LoadingStateDemo\"));\r\n+const DiagnosticDemo = lazy(() => import(\"./pages/LazyImage/DiagnosticDemo\"));\r\n+const WorkerFixTest = lazy(() => import(\"./pages/LazyImage/WorkerFixTest\"));\r\n+const SimpleLazyImageDemo = lazy(\r\n+  () => import(\"./pages/LazyImage/SimpleLazyImageDemo\")\r\n+);\r\n+const QuickDemo = lazy(() => import(\"./pages/LazyImage/QuickDemo\"));\r\n+const LoadingStateDemo = lazy(\r\n+  () => import(\"./pages/LazyImage/LoadingStateDemo\")\r\n+);\r\n \r\n const NavBar: React.FC = () => {\r\n   const baseLinkStyle: React.CSSProperties = {\r\n     padding: \"8px 12px\",\r\n"
                },
                {
                    "date": 1759244228219,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,32 +6,9 @@\n   Routes,\r\n } from \"react-router-dom\";\r\n import React, { Suspense, lazy } from \"react\";\r\n \r\n-const LazyImageDemo = lazy(() => import(\"./pages/LazyImage/LazyImageDemo\"));\r\n-const VirtualScrollLazyImageDemo = lazy(\r\n-  () => import(\"./pages/LazyImage/VirtualScrollDemo\")\r\n-);\r\n-const HorizontalScrollLazyImageDemo = lazy(\r\n-  () => import(\"./pages/LazyImage/HorizontalScrollDemo\")\r\n-);\r\n-const BothAxisScrollLazyImageDemo = lazy(\r\n-  () => import(\"./pages/LazyImage/BothAxisScrollDemo\")\r\n-);\r\n-const MemoryTestDemo = lazy(() => import(\"./pages/LazyImage/MemoryTestDemo\"));\r\n-const WorkerTestDemo = lazy(() => import(\"./pages/LazyImage/WorkerTestDemo\"));\r\n-const OptimizedWorkerTestDemo = lazy(\r\n-  () => import(\"./pages/LazyImage/OptimizedWorkerTestDemo\")\r\n-);\r\n-const DiagnosticDemo = lazy(() => import(\"./pages/LazyImage/DiagnosticDemo\"));\r\n-const WorkerFixTest = lazy(() => import(\"./pages/LazyImage/WorkerFixTest\"));\r\n-const SimpleLazyImageDemo = lazy(\r\n-  () => import(\"./pages/LazyImage/SimpleLazyImageDemo\")\r\n-);\r\n const QuickDemo = lazy(() => import(\"./pages/LazyImage/QuickDemo\"));\r\n-const LoadingStateDemo = lazy(\r\n-  () => import(\"./pages/LazyImage/LoadingStateDemo\")\r\n-);\r\n \r\n const NavBar: React.FC = () => {\r\n   const baseLinkStyle: React.CSSProperties = {\r\n     padding: \"8px 12px\",\r\n"
                },
                {
                    "date": 1759244237758,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,20 +50,10 @@\n         flexWrap: \"wrap\",\r\n       }}\r\n     >\r\n       <h1 style={{ margin: 0, marginRight: 12, fontSize: 20 }}>组件演示路由</h1>\r\n-      <LinkItem to=\"/lazy-image\" label=\"LazyImage\" />\r\n-      <LinkItem to=\"/simple-lazy-image\" label=\"简单单张图片\" />\r\n       <LinkItem to=\"/quick-demo\" label=\"快速演示\" />\r\n-      <LinkItem to=\"/loading-state-demo\" label=\"加载状态演示\" />\r\n-      <LinkItem to=\"/lazy-image-virtual\" label=\"LazyImage: 虚拟滚动\" />\r\n-      <LinkItem to=\"/lazy-image-horizontal\" label=\"LazyImage: 水平滚动\" />\r\n-      <LinkItem to=\"/lazy-image-both\" label=\"LazyImage: 双轴滚动\" />\r\n-      <LinkItem to=\"/memory-test\" label=\"内存管理测试\" />\r\n-      <LinkItem to=\"/worker-test\" label=\"Worker 测试\" />\r\n-      <LinkItem to=\"/optimized-worker-test\" label=\"优化 Worker 测试\" />\r\n-      <LinkItem to=\"/diagnostic\" label=\"性能诊断\" />\r\n-      <LinkItem to=\"/worker-fix-test\" label=\"Worker 修复测试\" />\r\n+\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1759244254924,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,38 +72,9 @@\n           <Suspense\r\n             fallback={<div style={{ padding: 20 }}>正在加载页面...</div>}\r\n           >\r\n             <Routes>\r\n-              <Route path=\"/lazy-image\" element={<LazyImageDemo />} />\r\n-              <Route\r\n-                path=\"/simple-lazy-image\"\r\n-                element={<SimpleLazyImageDemo />}\r\n-              />\r\n               <Route path=\"/quick-demo\" element={<QuickDemo />} />\r\n-              <Route\r\n-                path=\"/loading-state-demo\"\r\n-                element={<LoadingStateDemo />}\r\n-              />\r\n-              <Route\r\n-                path=\"/lazy-image-virtual\"\r\n-                element={<VirtualScrollLazyImageDemo />}\r\n-              />\r\n-              <Route\r\n-                path=\"/lazy-image-horizontal\"\r\n-                element={<HorizontalScrollLazyImageDemo />}\r\n-              />\r\n-              <Route\r\n-                path=\"/lazy-image-both\"\r\n-                element={<BothAxisScrollLazyImageDemo />}\r\n-              />\r\n-              <Route path=\"/memory-test\" element={<MemoryTestDemo />} />\r\n-              <Route path=\"/worker-test\" element={<WorkerTestDemo />} />\r\n-              <Route\r\n-                path=\"/optimized-worker-test\"\r\n-                element={<OptimizedWorkerTestDemo />}\r\n-              />\r\n-              <Route path=\"/diagnostic\" element={<DiagnosticDemo />} />\r\n-              <Route path=\"/worker-fix-test\" element={<WorkerFixTest />} />\r\n               <Route path=\"*\" element={<Navigate to=\"/lazy-image\" replace />} />\r\n             </Routes>\r\n           </Suspense>\r\n         </div>\r\n"
                },
                {
                    "date": 1759244273025,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n   Routes,\r\n } from \"react-router-dom\";\r\n import React, { Suspense, lazy } from \"react\";\r\n \r\n-const QuickDemo = lazy(() => import(\"./pages/LazyImage/QuickDemo\"));\r\n+const QuickDemo = lazy(() => import(\"./pages/LazyLoadImage/QuickDemo\"));\r\n \r\n const NavBar: React.FC = () => {\r\n   const baseLinkStyle: React.CSSProperties = {\r\n     padding: \"8px 12px\",\r\n"
                },
                {
                    "date": 1759244532638,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,8 @@\n       }}\r\n     >\r\n       <h1 style={{ margin: 0, marginRight: 12, fontSize: 20 }}>组件演示路由</h1>\r\n       <LinkItem to=\"/quick-demo\" label=\"快速演示\" />\r\n-\r\n     </div>\r\n   );\r\n };\r\n \r\n@@ -74,9 +73,9 @@\n             fallback={<div style={{ padding: 20 }}>正在加载页面...</div>}\r\n           >\r\n             <Routes>\r\n               <Route path=\"/quick-demo\" element={<QuickDemo />} />\r\n-              <Route path=\"*\" element={<Navigate to=\"/lazy-image\" replace />} />\r\n+              <Route path=\"*\" element={<Navigate to=\"/quick-demo\" replace />} />\r\n             </Routes>\r\n           </Suspense>\r\n         </div>\r\n       </div>\r\n"
                },
                {
                    "date": 1759304456625,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,11 @@\n } from \"react-router-dom\";\r\n import React, { Suspense, lazy } from \"react\";\r\n \r\n const QuickDemo = lazy(() => import(\"./pages/LazyLoadImage/QuickDemo\"));\r\n+const QuickDemoPhase2 = lazy(\r\n+  () => import(\"./pages/LazyLoadImage/QuickDemo_Phase2\")\r\n+);\r\n \r\n const NavBar: React.FC = () => {\r\n   const baseLinkStyle: React.CSSProperties = {\r\n     padding: \"8px 12px\",\r\n@@ -51,8 +54,9 @@\n       }}\r\n     >\r\n       <h1 style={{ margin: 0, marginRight: 12, fontSize: 20 }}>组件演示路由</h1>\r\n       <LinkItem to=\"/quick-demo\" label=\"快速演示\" />\r\n+      <LinkItem to=\"/quick-demo-phase2\" label=\"Phase 2 扩展演示\" />\r\n     </div>\r\n   );\r\n };\r\n \r\n@@ -73,8 +77,9 @@\n             fallback={<div style={{ padding: 20 }}>正在加载页面...</div>}\r\n           >\r\n             <Routes>\r\n               <Route path=\"/quick-demo\" element={<QuickDemo />} />\r\n+              <Route path=\"/quick-demo-phase2\" element={<QuickDemoPhase2 />} />\r\n               <Route path=\"*\" element={<Navigate to=\"/quick-demo\" replace />} />\r\n             </Routes>\r\n           </Suspense>\r\n         </div>\r\n"
                },
                {
                    "date": 1759307028384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,11 @@\n const QuickDemo = lazy(() => import(\"./pages/LazyLoadImage/QuickDemo\"));\r\n const QuickDemoPhase2 = lazy(\r\n   () => import(\"./pages/LazyLoadImage/QuickDemo_Phase2\")\r\n );\r\n+const QuickDemoPhase3 = lazy(\r\n+  () => import(\"./pages/LazyLoadImage/QuickDemo_Phase3\")\r\n+);\r\n \r\n const NavBar: React.FC = () => {\r\n   const baseLinkStyle: React.CSSProperties = {\r\n     padding: \"8px 12px\",\r\n@@ -55,8 +58,9 @@\n     >\r\n       <h1 style={{ margin: 0, marginRight: 12, fontSize: 20 }}>组件演示路由</h1>\r\n       <LinkItem to=\"/quick-demo\" label=\"快速演示\" />\r\n       <LinkItem to=\"/quick-demo-phase2\" label=\"Phase 2 扩展演示\" />\r\n+      <LinkItem to=\"/quick-demo-phase3\" label=\"Phase 3 并发演示\" />\r\n     </div>\r\n   );\r\n };\r\n \r\n@@ -78,8 +82,9 @@\n           >\r\n             <Routes>\r\n               <Route path=\"/quick-demo\" element={<QuickDemo />} />\r\n               <Route path=\"/quick-demo-phase2\" element={<QuickDemoPhase2 />} />\r\n+              <Route path=\"/quick-demo-phase3\" element={<QuickDemoPhase3 />} />\r\n               <Route path=\"*\" element={<Navigate to=\"/quick-demo\" replace />} />\r\n             </Routes>\r\n           </Suspense>\r\n         </div>\r\n"
                },
                {
                    "date": 1759310830086,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,8 +13,11 @@\n );\r\n const QuickDemoPhase3 = lazy(\r\n   () => import(\"./pages/LazyLoadImage/QuickDemo_Phase3\")\r\n );\r\n+const QuickDemoPhase4 = lazy(\r\n+  () => import(\"./pages/LazyLoadImage/QuickDemo_Phase4\")\r\n+);\r\n \r\n const NavBar: React.FC = () => {\r\n   const baseLinkStyle: React.CSSProperties = {\r\n     padding: \"8px 12px\",\r\n@@ -59,8 +62,9 @@\n       <h1 style={{ margin: 0, marginRight: 12, fontSize: 20 }}>组件演示路由</h1>\r\n       <LinkItem to=\"/quick-demo\" label=\"快速演示\" />\r\n       <LinkItem to=\"/quick-demo-phase2\" label=\"Phase 2 扩展演示\" />\r\n       <LinkItem to=\"/quick-demo-phase3\" label=\"Phase 3 并发演示\" />\r\n+      <LinkItem to=\"/quick-demo-phase4\" label=\"Phase 4 LQIP 演示\" />\r\n     </div>\r\n   );\r\n };\r\n \r\n@@ -83,8 +87,9 @@\n             <Routes>\r\n               <Route path=\"/quick-demo\" element={<QuickDemo />} />\r\n               <Route path=\"/quick-demo-phase2\" element={<QuickDemoPhase2 />} />\r\n               <Route path=\"/quick-demo-phase3\" element={<QuickDemoPhase3 />} />\r\n+              <Route path=\"/quick-demo-phase4\" element={<QuickDemoPhase4 />} />\r\n               <Route path=\"*\" element={<Navigate to=\"/quick-demo\" replace />} />\r\n             </Routes>\r\n           </Suspense>\r\n         </div>\r\n"
                },
                {
                    "date": 1759310948171,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,101 +1,96 @@\n-import {\r\n-  NavLink,\r\n-  Navigate,\r\n-  Route,\r\n-  HashRouter as Router,\r\n-  Routes,\r\n-} from \"react-router-dom\";\r\n-import React, { Suspense, lazy } from \"react\";\r\n-\r\n-const QuickDemo = lazy(() => import(\"./pages/LazyLoadImage/QuickDemo\"));\r\n-const QuickDemoPhase2 = lazy(\r\n-  () => import(\"./pages/LazyLoadImage/QuickDemo_Phase2\")\r\n-);\r\n-const QuickDemoPhase3 = lazy(\r\n-  () => import(\"./pages/LazyLoadImage/QuickDemo_Phase3\")\r\n-);\r\n-const QuickDemoPhase4 = lazy(\r\n-  () => import(\"./pages/LazyLoadImage/QuickDemo_Phase4\")\r\n-);\r\n-\r\n-const NavBar: React.FC = () => {\r\n-  const baseLinkStyle: React.CSSProperties = {\r\n-    padding: \"8px 12px\",\r\n-    borderWidth: 1,\r\n-    borderStyle: \"solid\",\r\n-    borderColor: \"#ddd\",\r\n-    borderRadius: 6,\r\n-    background: \"#fff\",\r\n-    color: \"#000\",\r\n-    textDecoration: \"none\",\r\n-  };\r\n-  const activeStyle: React.CSSProperties = {\r\n-    background: \"#1890ff\",\r\n-    color: \"#fff\",\r\n-    borderColor: \"#1890ff\",\r\n-  };\r\n-  const LinkItem: React.FC<{ to: string; label: string }> = ({ to, label }) => (\r\n-    <NavLink\r\n-      to={to}\r\n-      style={({ isActive }) => ({\r\n-        ...baseLinkStyle,\r\n-        ...(isActive ? activeStyle : {}),\r\n-      })}\r\n-    >\r\n-      {label}\r\n-    </NavLink>\r\n-  );\r\n-\r\n-  return (\r\n-    <div\r\n-      style={{\r\n-        marginBottom: 20,\r\n-        padding: 20,\r\n-        backgroundColor: \"#f5f5f5\",\r\n-        borderRadius: 8,\r\n-        display: \"flex\",\r\n-        gap: 10,\r\n-        alignItems: \"center\",\r\n-        flexWrap: \"wrap\",\r\n-      }}\r\n-    >\r\n-      <h1 style={{ margin: 0, marginRight: 12, fontSize: 20 }}>组件演示路由</h1>\r\n-      <LinkItem to=\"/quick-demo\" label=\"快速演示\" />\r\n-      <LinkItem to=\"/quick-demo-phase2\" label=\"Phase 2 扩展演示\" />\r\n-      <LinkItem to=\"/quick-demo-phase3\" label=\"Phase 3 并发演示\" />\r\n-      <LinkItem to=\"/quick-demo-phase4\" label=\"Phase 4 LQIP 演示\" />\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-const App: React.FC = () => {\r\n-  return (\r\n-    <Router>\r\n-      <div style={{ padding: 20 }}>\r\n-        <NavBar />\r\n-        <div\r\n-          style={{\r\n-            padding: 10,\r\n-            backgroundColor: \"#fff\",\r\n-            borderRadius: 8,\r\n-            border: \"1px solid #ddd\",\r\n-          }}\r\n-        >\r\n-          <Suspense\r\n-            fallback={<div style={{ padding: 20 }}>正在加载页面...</div>}\r\n-          >\r\n-            <Routes>\r\n-              <Route path=\"/quick-demo\" element={<QuickDemo />} />\r\n-              <Route path=\"/quick-demo-phase2\" element={<QuickDemoPhase2 />} />\r\n-              <Route path=\"/quick-demo-phase3\" element={<QuickDemoPhase3 />} />\r\n-              <Route path=\"/quick-demo-phase4\" element={<QuickDemoPhase4 />} />\r\n-              <Route path=\"*\" element={<Navigate to=\"/quick-demo\" replace />} />\r\n-            </Routes>\r\n-          </Suspense>\r\n-        </div>\r\n-      </div>\r\n-    </Router>\r\n-  );\r\n-};\r\n-\r\n-export default App;\r\n+import {\n+  NavLink,\n+  Navigate,\n+  Route,\n+  HashRouter as Router,\n+  Routes,\n+} from \"react-router-dom\";\n+import React, { Suspense, lazy } from \"react\";\n+\n+const QuickDemo = lazy(() => import(\"./pages/LazyLoadImage/QuickDemo\"));\n+const QuickDemoPhase2 = lazy(\n+  () => import(\"./pages/LazyLoadImage/QuickDemo_Phase2\")\n+);\n+const QuickDemoPhase3 = lazy(\n+  () => import(\"./pages/LazyLoadImage/QuickDemo_Phase3\")\n+);\n+\n+const NavBar: React.FC = () => {\n+  const baseLinkStyle: React.CSSProperties = {\n+    padding: \"8px 12px\",\n+    borderWidth: 1,\n+    borderStyle: \"solid\",\n+    borderColor: \"#ddd\",\n+    borderRadius: 6,\n+    background: \"#fff\",\n+    color: \"#000\",\n+    textDecoration: \"none\",\n+  };\n+  const activeStyle: React.CSSProperties = {\n+    background: \"#1890ff\",\n+    color: \"#fff\",\n+    borderColor: \"#1890ff\",\n+  };\n+  const LinkItem: React.FC<{ to: string; label: string }> = ({ to, label }) => (\n+    <NavLink\n+      to={to}\n+      style={({ isActive }) => ({\n+        ...baseLinkStyle,\n+        ...(isActive ? activeStyle : {}),\n+      })}\n+    >\n+      {label}\n+    </NavLink>\n+  );\n+\n+  return (\n+    <div\n+      style={{\n+        marginBottom: 20,\n+        padding: 20,\n+        backgroundColor: \"#f5f5f5\",\n+        borderRadius: 8,\n+        display: \"flex\",\n+        gap: 10,\n+        alignItems: \"center\",\n+        flexWrap: \"wrap\",\n+      }}\n+    >\n+      <h1 style={{ margin: 0, marginRight: 12, fontSize: 20 }}>组件演示路由</h1>\n+      <LinkItem to=\"/quick-demo\" label=\"快速演示\" />\n+      <LinkItem to=\"/quick-demo-phase2\" label=\"Phase 2 扩展演示\" />\n+      <LinkItem to=\"/quick-demo-phase3\" label=\"Phase 3 并发演示\" />\n+    </div>\n+  );\n+};\n+\n+const App: React.FC = () => {\n+  return (\n+    <Router>\n+      <div style={{ padding: 20 }}>\n+        <NavBar />\n+        <div\n+          style={{\n+            padding: 10,\n+            backgroundColor: \"#fff\",\n+            borderRadius: 8,\n+            border: \"1px solid #ddd\",\n+          }}\n+        >\n+          <Suspense\n+            fallback={<div style={{ padding: 20 }}>正在加载页面...</div>}\n+          >\n+            <Routes>\n+              <Route path=\"/quick-demo\" element={<QuickDemo />} />\n+              <Route path=\"/quick-demo-phase2\" element={<QuickDemoPhase2 />} />\n+              <Route path=\"/quick-demo-phase3\" element={<QuickDemoPhase3 />} />\n+              <Route path=\"*\" element={<Navigate to=\"/quick-demo\" replace />} />\n+            </Routes>\n+          </Suspense>\n+        </div>\n+      </div>\n+    </Router>\n+  );\n+};\n+\n+export default App;\n"
                },
                {
                    "date": 1759311122269,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,8 +13,11 @@\n );\n const QuickDemoPhase3 = lazy(\n   () => import(\"./pages/LazyLoadImage/QuickDemo_Phase3\")\n );\n+const QuickDemoPhase4 = lazy(\n+  () => import(\"./pages/LazyLoadImage/QuickDemo_Phase4\")\n+);\n \n const NavBar: React.FC = () => {\n   const baseLinkStyle: React.CSSProperties = {\n     padding: \"8px 12px\",\n@@ -59,8 +62,9 @@\n       <h1 style={{ margin: 0, marginRight: 12, fontSize: 20 }}>组件演示路由</h1>\n       <LinkItem to=\"/quick-demo\" label=\"快速演示\" />\n       <LinkItem to=\"/quick-demo-phase2\" label=\"Phase 2 扩展演示\" />\n       <LinkItem to=\"/quick-demo-phase3\" label=\"Phase 3 并发演示\" />\n+      <LinkItem to=\"/quick-demo-phase4\" label=\"Phase 4 LQIP 演示\" />\n     </div>\n   );\n };\n \n@@ -83,8 +87,9 @@\n             <Routes>\n               <Route path=\"/quick-demo\" element={<QuickDemo />} />\n               <Route path=\"/quick-demo-phase2\" element={<QuickDemoPhase2 />} />\n               <Route path=\"/quick-demo-phase3\" element={<QuickDemoPhase3 />} />\n+              <Route path=\"/quick-demo-phase4\" element={<QuickDemoPhase4 />} />\n               <Route path=\"*\" element={<Navigate to=\"/quick-demo\" replace />} />\n             </Routes>\n           </Suspense>\n         </div>\n"
                },
                {
                    "date": 1759359101887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,9 +94,11 @@\n                 path=\"/quick-demo-phase5\"\n                 element={\n                   <React.Suspense fallback={<div>加载 Phase 5...</div>}>\n                     {React.createElement(\n-                      React.lazy(() => import(\"./pages/LazyLoadImage/QuickDemo_Phase5\"))\n+                      React.lazy(\n+                        () => import(\"./pages/LazyLoadImage/QuickDemo_Phase5\")\n+                      )\n                     )}\n                   </React.Suspense>\n                 }\n               />\n"
                },
                {
                    "date": 1759393946928,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,11 +32,9 @@\n );\n const ConcurrencyDemo = lazy(\n   () => import(\"./pages/LazyLoadImageModuleDemo/ConcurrencyDemo\")\n );\n-const LQIPDemo = lazy(\n-  () => import(\"./pages/LazyLoadImageModuleDemo/LQIPDemo\")\n-);\n+const LQIPDemo = lazy(() => import(\"./pages/LazyLoadImageModuleDemo/LQIPDemo\"));\n const ScrollOptimizationDemo = lazy(\n   () => import(\"./pages/LazyLoadImageModuleDemo/ScrollOptimizationDemo\")\n );\n const MemoryManagementDemo = lazy(\n@@ -123,12 +121,9 @@\n           <Suspense\n             fallback={<div style={{ padding: 20 }}>正在加载页面...</div>}\n           >\n             <Routes>\n-              <Route\n-                path=\"/plugin-system\"\n-                element={<PluginSystemDemo />}\n-              />\n+              <Route path=\"/plugin-system\" element={<PluginSystemDemo />} />\n               <Route path=\"/quick-demo\" element={<QuickDemo />} />\n               <Route path=\"/quick-demo-phase2\" element={<QuickDemoPhase2 />} />\n               <Route path=\"/quick-demo-phase3\" element={<QuickDemoPhase3 />} />\n               <Route path=\"/quick-demo-phase4\" element={<QuickDemoPhase4 />} />\n@@ -146,15 +141,27 @@\n               />\n               <Route path=\"/quick-demo-phase6\" element={<QuickDemoPhase6 />} />\n               <Route path=\"/lazy-image-demo\" element={<LazyImageDemo />} />\n               <Route path=\"/lli-module\" element={<LLIModuleDemoIndex />} />\n-              <Route path=\"/lli-module/core-basic\" element={<CoreBasicDemo />} />\n+              <Route\n+                path=\"/lli-module/core-basic\"\n+                element={<CoreBasicDemo />}\n+              />\n               <Route path=\"/lli-module/cache-demo\" element={<CacheDemo />} />\n-              <Route path=\"/lli-module/concurrency-demo\" element={<ConcurrencyDemo />} />\n+              <Route\n+                path=\"/lli-module/concurrency-demo\"\n+                element={<ConcurrencyDemo />}\n+              />\n               <Route path=\"/lli-module/lqip-demo\" element={<LQIPDemo />} />\n-              <Route path=\"/lli-module/scroll-demo\" element={<ScrollOptimizationDemo />} />\n-              <Route path=\"/lli-module/memory-demo\" element={<MemoryManagementDemo />} />\n               <Route\n+                path=\"/lli-module/scroll-demo\"\n+                element={<ScrollOptimizationDemo />}\n+              />\n+              <Route\n+                path=\"/lli-module/memory-demo\"\n+                element={<MemoryManagementDemo />}\n+              />\n+              <Route\n                 path=\"*\"\n                 element={<Navigate to=\"/plugin-system\" replace />}\n               />\n             </Routes>\n"
                }
            ],
            "date": 1759220444649,
            "name": "Commit-0",
            "content": "import {\r\n  NavLink,\r\n  Navigate,\r\n  Route,\r\n  HashRouter as Router,\r\n  Routes,\r\n} from \"react-router-dom\";\r\nimport React, { Suspense, lazy } from \"react\";\r\n\r\nconst LazyImageDemo = lazy(() => import(\"./pages/LazyImageDemo\"));\r\nconst VirtualScrollLazyImageDemo = lazy(\r\n  () => import(\"./pages/VirtualScrollDemo\")\r\n);\r\nconst HorizontalScrollLazyImageDemo = lazy(\r\n  () => import(\"./pages/HorizontalScrollDemo\")\r\n);\r\nconst BothAxisScrollLazyImageDemo = lazy(\r\n  () => import(\"./pages/BothAxisScrollDemo\")\r\n);\r\nconst MemoryTestDemo = lazy(() => import(\"./pages/MemoryTestDemo\"));\r\nconst WorkerTestDemo = lazy(() => import(\"./pages/WorkerTestDemo\"));\r\n\r\nconst NavBar: React.FC = () => {\r\n  const baseLinkStyle: React.CSSProperties = {\r\n    padding: \"8px 12px\",\r\n    borderWidth: 1,\r\n    borderStyle: \"solid\",\r\n    borderColor: \"#ddd\",\r\n    borderRadius: 6,\r\n    background: \"#fff\",\r\n    color: \"#000\",\r\n    textDecoration: \"none\",\r\n  };\r\n  const activeStyle: React.CSSProperties = {\r\n    background: \"#1890ff\",\r\n    color: \"#fff\",\r\n    borderColor: \"#1890ff\",\r\n  };\r\n  const LinkItem: React.FC<{ to: string; label: string }> = ({ to, label }) => (\r\n    <NavLink\r\n      to={to}\r\n      style={({ isActive }) => ({\r\n        ...baseLinkStyle,\r\n        ...(isActive ? activeStyle : {}),\r\n      })}\r\n    >\r\n      {label}\r\n    </NavLink>\r\n  );\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        marginBottom: 20,\r\n        padding: 20,\r\n        backgroundColor: \"#f5f5f5\",\r\n        borderRadius: 8,\r\n        display: \"flex\",\r\n        gap: 10,\r\n        alignItems: \"center\",\r\n        flexWrap: \"wrap\",\r\n      }}\r\n    >\r\n      <h1 style={{ margin: 0, marginRight: 12, fontSize: 20 }}>组件演示路由</h1>\r\n      <LinkItem to=\"/lazy-image\" label=\"LazyImage\" />\r\n      <LinkItem to=\"/lazy-image-virtual\" label=\"LazyImage: 虚拟滚动\" />\r\n      <LinkItem to=\"/lazy-image-horizontal\" label=\"LazyImage: 水平滚动\" />\r\n      <LinkItem to=\"/lazy-image-both\" label=\"LazyImage: 双轴滚动\" />\r\n      <LinkItem to=\"/memory-test\" label=\"内存管理测试\" />\r\n      <LinkItem to=\"/worker-test\" label=\"Worker 测试\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <Router>\r\n      <div style={{ padding: 20 }}>\r\n        <NavBar />\r\n        <div\r\n          style={{\r\n            padding: 10,\r\n            backgroundColor: \"#fff\",\r\n            borderRadius: 8,\r\n            border: \"1px solid #ddd\",\r\n          }}\r\n        >\r\n          <Suspense\r\n            fallback={<div style={{ padding: 20 }}>正在加载页面...</div>}\r\n          >\r\n            <Routes>\r\n              <Route path=\"/lazy-image\" element={<LazyImageDemo />} />\r\n              <Route\r\n                path=\"/lazy-image-virtual\"\r\n                element={<VirtualScrollLazyImageDemo />}\r\n              />\r\n              <Route\r\n                path=\"/lazy-image-horizontal\"\r\n                element={<HorizontalScrollLazyImageDemo />}\r\n              />\r\n              <Route\r\n                path=\"/lazy-image-both\"\r\n                element={<BothAxisScrollLazyImageDemo />}\r\n              />\r\n              <Route path=\"/memory-test\" element={<MemoryTestDemo />} />\r\n              <Route path=\"/worker-test\" element={<WorkerTestDemo />} />\r\n              <Route\r\n                path=\"*\"\r\n                element={<Navigate to=\"/lazy-image\" replace />}\r\n              />\r\n            </Routes>\r\n          </Suspense>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"
        }
    ]
}